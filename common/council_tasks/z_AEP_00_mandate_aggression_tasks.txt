task_fabricate_claim = {
	position = councillor_court_chaplain

	task_type = task_type_county
	county_target = all
	ai_county_target = neighbor_land
	task_progress = task_progress_percentage
	restart_on_finish = yes

	effect_desc = {
		desc = task_fabricate_claim_effect_desc

		desc = {
			desc = council_task_possible_side_effects
			triggered_desc = {
				trigger = {
					learning > mediocre_skill_rating
				}
				desc = task_fabricate_claim_duchy_claim
			}
			triggered_desc = {
				trigger = {
					learning < high_skill_rating
				}
				desc = task_fabricate_claim_vassal_opinion_loss
			}
			triggered_desc = {
				trigger = {
					learning < high_skill_rating
				}
				desc = task_fabricate_claim_piety_loss
			}
			triggered_desc = {
				trigger = {
					learning < high_skill_rating
				}
				desc = task_fabricate_claim_upset_target
			}
		}
	}

	progress = {
		value = 0
		add = {
			value = court_chaplain_fabricate_claim_base
			desc = COURT_CHAPLAIN_PROGRESS_BASE
		}
		add = {
			value = scope:councillor.court_chaplain_fabricate_claim_monthly_increase_base
			desc = SCALED_COUNCILLOR_LEARNING_VALUE
		}
		# Relation Bonuses/Penalties
		if = { # Friend
			limit = {
				scope:councillor_liege = {
					has_relation_friend = scope:councillor
					NOT = { has_relation_best_friend = scope:councillor }
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_monthly_increase_friend_bonus
				desc = COUNCILLOR_IS_YOUR_FRIEND
			}
		}
		if = { # Best Friend
			limit = {
				scope:councillor_liege = {
					has_relation_best_friend = scope:councillor
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_monthly_increase_best_friend_bonus
				desc = COUNCILLOR_IS_YOUR_BEST_FRIEND
			}
		}
		if = { # Rival
			limit = {
				scope:councillor_liege = {
					has_relation_rival = scope:councillor
					NOT = { has_relation_nemesis = scope:councillor }
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_monthly_increase_rival_bonus
				desc = COUNCILLOR_IS_YOUR_RIVAL
			}
		}
		if = { # Nemesis
			limit = {
				scope:councillor_liege = {
					has_relation_nemesis = scope:councillor
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_monthly_increase_nemesis_bonus
				desc = COUNCILLOR_IS_YOUR_NEMESIS
			}
		}

		# Perk Bonuses
		if = {
			limit = {
				scope:councillor_liege = { has_perk = accomplished_forger_perk }
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_perk_bonus_monthly_increase
				desc = FABRICATE_CLAIM_PERK_BONUS_VALUE
			}
		}
		if = {
			limit = {
				councillor_liege_has_erudition_legacy_5_perk = yes
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_dynasty_perk_bonus
				desc = FABRICATE_CLAIM_DYNASTY_PERK_BONUS_VALUE
			}
		}
		if = {
			limit = {
				councillor_liege_has_family_business_bonus = yes
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_family_business_bonus
				desc = FAMILY_BUSINESS_BONUS_VALUE
			}
		}
		if = {
			limit = {
				councillor_liege_has_consulted_house_bonus = yes
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_consulted_house_bonus
				desc = FAMILY_BUSINESS_BONUS_VALUE
			}
		}

		# Tradition Bonuses
		if = {
			limit = {
				scope:councillor.liege = {
					culture = {
						has_cultural_parameter = languages_speed_up_claims
					}
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_tradition_language_scholars_bonus
				desc = FABRICATE_CLAIM_LANGUAGE_SCHOLARS_BONUS
			}
		}

		if = { # Inspection Reward
			limit = {
				scope:councillor_liege = {
					has_character_modifier = inspection_reward_focused_claims_modifier
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_inspection_reward_bonus
				desc = FABRICATE_CLAIM_INSPECTION_BONUS
			}
		}

		# Innovation Bonuses
		if = {
			limit = {
				scope:councillor.liege = {
					culture = {
						has_innovation = innovation_land_grants
					}
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_innovation_bonus_land_grants
				desc = COURT_CHAPLAIN_FABRICATE_CLAIM_INNOVATION_BONUS_LAND_GRANTS
			}
		}
		if = {
			limit = {
				exists = scope:county
				NOT = {
					scope:county.holder.faith = scope:councillor.liege.faith
				}
			}
			multiply = {
				value = scope:councillor.court_chaplain_heretic_bonus
				desc = "COURT_CHAPLAIN_FABRICATE_CLAIM_HERETIC_BONUS"
			}
		}
		if = {
			limit = {
				exists = scope:county
				NOT = {
					scope:county = {
						is_neighbor_to_realm = scope:councillor_liege
					}
				}
			}
			multiply = {
				value = scope:councillor.court_chaplain_fabricate_claim_not_adjacent_penalty
				desc = "COURT_CHAPLAIN_FABRICATE_CLAIM_NOT_ADJACENT"
			}
		}
		if = { #Progress penalty when fabricating on vassals
			limit = {
					exists = scope:county
					scope:county.holder = {
						target_is_liege_or_above = scope:councillor.liege 
				}
			}
			multiply = {
				value = scope:councillor.court_chaplain_fabricate_claim_vassal_penalty
				desc = "COURT_CHAPLAIN_FABRICATE_CLAIM_VASSAL_COUNTY"
			}
		}
		# Misc Bonuses
		if = { # FP3
			limit = {
				scope:councillor_liege = {
					any_character_struggle = {
						is_struggle_type = persian_struggle
						is_struggle_phase = struggle_persia_phase_unrest
					}
				}
			}
			add = { # +25% of total
				value = scope:councillor.court_chaplain_fabricate_claim_base_total
				divide = 4
				desc = FABRICATE_CLAIM_ANY_STRUGGLE_BONUS
			}
		}
		if = {
			limit = {
				scope:councillor_liege = {
					has_title = title:c_byzantion
					title:c_byzantion = { has_county_modifier = pandidakterion_university_modifier }
				}
			}
			multiply = {
				value = 1.3
				desc = pandidakterion_university_modifier
			}
		}
	}

	potential_county = {
		scope:county.holder.top_liege = {
			in_diplomatic_range = scope:councillor_liege
		}
		scope:county = {
			NOR = {
				holder = scope:councillor_liege
				scope:councillor_liege = {
					has_claim_on = scope:county
				}
			}
		}
	}

	on_start_task_county = {
		# Message for vassals
		scope:county = { save_scope_as = set_county }
		trigger_event = {
			id = court_chaplain_task.8000
			days = 2 # To ensure it fires after the halted message
		}
		#spawn a task contract to counter the missionary, if a nearby adventurer has the same faith as the county
		if = {
			limit = {
				any_task_contract = {
					has_task_contract_type = laamp_help_fabricate_claim_contract
					NOT = {	task_contract_location = scope:county.title_province }
				}
				any_player = {
					is_landless_adventurer = yes
					is_within_diplo_range = { CHARACTER = scope:councillor }
					any_character_task_contract = {
						has_task_contract_type = laamp_help_fabricate_claim_contract
						count <= council_task_contracts_limit_value
					}
					can_create_task_contract = {
						type_name = laamp_help_fabricate_claim_contract
						employer = scope:councillor
					}
					save_temporary_scope_as = player_laamp
				}
			}
			scope:player_laamp = {
				create_task_contract = {
					task_contract_type = laamp_help_fabricate_claim_contract
					task_contract_tier = scope:councillor.task_contract_tier_value
					location = scope:county.title_province
					task_contract_employer = scope:councillor
					target = scope:county.holder
					destination = scope:county.title_province
				}
			}
		}
	}

	on_finish_task_county = {
		scope:county = {
			holder = {
				save_scope_as = county_holder
			}
		}
		scope:councillor_liege = {
			trigger_event = {
				on_action = task_fabricate_claim_success_effect
			}
		}
	}

	monthly_on_action = task_fabricate_claim_side_effects

	ai_target_score = {
		value = 1000
		
		if = {
			limit = { # Vassals in the same realm
				scope:councillor_liege = {
					is_independent_ruler = no
				}
				scope:county.holder = {
					is_independent_ruler = no
				}
				scope:county.holder.top_liege = scope:councillor_liege.top_liege
			}
			
			if = {
				limit = {
					exists = scope:county.holder.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege
						}
					}
					scope:county.holder.max_military_strength > scope:councillor_liege.council_task_fabricate_claim_relative_strength
				}
				subtract = 10000
			}
			else_if = {
				limit = {
					exists = scope:county.holder.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege
						}
					}
				}
				multiply = {
					value = scope:councillor_liege.max_military_strength
					divide = { value = scope:county.holder.max_military_strength min = 1 }
				}
			}
			
			else_if = {
				limit = {
					exists = scope:county.holder.liege.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege.liege
						}
					}
					scope:county.holder.liege.max_military_strength > scope:councillor_liege.council_task_fabricate_claim_relative_strength
				}
				subtract = 10000
			}
			else_if = {
				limit = {
					exists = scope:county.holder.liege.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege.liege
						}
					}
				}
				multiply = {
					value = scope:councillor_liege.max_military_strength
					divide = { value = scope:county.holder.liege.max_military_strength min = 1 }
				}
			}
			
			else_if = {
				limit = {
					exists = scope:county.holder.liege.liege.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege.liege.liege
						}
					}
					scope:county.holder.liege.liege.max_military_strength > scope:councillor_liege.council_task_fabricate_claim_relative_strength
				}
				subtract = 10000
			}
			else_if = {
				limit = {
					exists = scope:county.holder.liege.liege.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege.liege.liege
						}
					}
				}
				multiply = {
					value = scope:councillor_liege.max_military_strength
					divide = { value = scope:county.holder.liege.liege.max_military_strength min = 1 }
				}
			}
			
			else_if = {
				limit = {
					exists = scope:county.holder.liege.liege.liege.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege.liege.liege.liege
						}
					}
					scope:county.holder.liege.liege.liege.max_military_strength > scope:councillor_liege.council_task_fabricate_claim_relative_strength
				}
				subtract = 10000
			}
			else_if = {
				limit = {
					exists = scope:county.holder.liege.liege.liege.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege.liege.liege.liege
						}
					}
				}
				multiply = {
					value = scope:councillor_liege.max_military_strength
					divide = { value = scope:county.holder.liege.liege.liege.max_military_strength min = 1 }
				}
			}
		}
		else_if = {
			limit = {
				scope:county.holder.top_liege.max_military_strength > scope:councillor_liege.council_task_fabricate_claim_relative_strength
			}
			subtract = 10000
		}
		else = {	
			multiply = {
				value = scope:councillor_liege.max_military_strength
				divide = { value = scope:county.holder.top_liege.max_military_strength min = 1 }
			}
		}
	}

	ai_will_do = {
		value = 0
		if = {
			limit = {
				scope:councillor = {
					is_performing_council_task = task_fabricate_claim
				}
			}
			add = 10000 # Always keep going if this is already chosen
		}
		else_if = {
			# This block modified to encourage fabrications for Mandate
			limit = {
				OR = {
					ai_greed <= ai_honor
					ai_greed <= 0
					is_at_war = yes
					gold < 100
				}
			}
			if = {
				limit = {
					NOT = {
						any_character_struggle = {
							is_struggle_type = mandate_of_heaven_struggle
						}
					}
				}

				subtract = 1000
			}
			else = {
				subtract = 200
			}
		}
		else_if = { # If AI has good war, don't fabricate
			limit = {
				any_neighboring_and_across_water_top_liege_realm_owner = {
					scope:councillor_liege = {
						tier_difference = {
							target = prev
							value >= -1
						}
						NOR = {
							is_allied_to = prev
							has_truce = prev
							has_relation_friend = prev
							has_relation_lover = prev
						}
						current_military_strength > prev.current_military_strength
						has_any_cb_on = prev
					}			
				}
			}
			subtract = 1000
		}
		else = {
			add = 100
		}

		# Agenda impact
		if = {
			limit = {
				any_character_struggle = {
					involvement = involved
					is_struggle_type = iberian_struggle
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						any_character_struggle = {
							phase_has_catalyst = catalyst_gain_claim_on_title_fp2
						}
						has_character_flag = agenda_towards_escalation
					}
					add = 200
				}
				else_if = {
					limit = {
						any_character_struggle = {
							phase_has_catalyst = catalyst_gain_claim_on_title_fp2
						}
					}
					add = -100
				}
			}
		}

		if = {
			limit = {
				any_character_struggle = {
					involvement = involved
					is_struggle_type = persian_struggle
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						any_character_struggle = {
							phase_has_catalyst = catalyst_gain_claim_on_title_fp3
						}
						has_trait = fp3_struggle_detractor
					}
					add = 200
				}
				else_if = {
					limit = {
						any_character_struggle = {
							phase_has_catalyst = catalyst_gain_claim_on_title_fp3
						}
					}
					add = -100
				}
			}
		}

		if = {
			limit = {
				any_character_struggle = {
					is_struggle_type = mandate_of_heaven_struggle
				}
			}
			add = {
				value = 300
			}
		}
	}
}


task_find_secrets = {
	position = councillor_spymaster

	task_type = task_type_court
	task_progress = task_progress_percentage
	restart_on_finish = yes

	effect_desc = {
		desc = task_find_secrets_effect_desc
		desc = {
			desc = council_task_possible_side_effects
			desc = task_find_secrets_opinion_loss
			triggered_desc = {
				trigger = {
					exists = scope:target_character
					scope:target_character = {
						is_vassal_of = scope:councillor_liege
					}
				}
				desc = task_find_secrets_vassal_intimidation
			}
		}
	}

	progress = {
		value = 0
		add = {
			value = spymaster_find_secrets_base
			desc = SPYMASTER_PROGRESS_BASE
		}
		add = {
			value = scope:councillor.spymaster_find_secrets_monthly_increase
			desc = SCALED_COUNCILLOR_INTRIGUE_VALUE
		}
		# Relation Bonuses/Penalties
		if = {
			limit = {
				exists = scope:councillor_liege
			}
			if = { # Friend
				limit = {
					scope:councillor_liege = {
						has_relation_friend = scope:councillor
						NOT = { has_relation_best_friend = scope:councillor }
					}
				}
				add = {
					value = scope:councillor.spymaster_find_secrets_monthly_increase_friend_bonus
					desc = COUNCILLOR_IS_YOUR_FRIEND
				}
			}
			if = { # Best Friend
				limit = {
					scope:councillor_liege = {
						has_relation_best_friend = scope:councillor
					}
				}
				add = {
					value = scope:councillor.spymaster_find_secrets_monthly_increase_best_friend_bonus
					desc = COUNCILLOR_IS_YOUR_BEST_FRIEND
				}
			}
			if = { # Rival
				limit = {
					scope:councillor_liege = {
						has_relation_rival = scope:councillor
						NOT = { has_relation_nemesis = scope:councillor }
					}
				}
				add = {
					value = scope:councillor.spymaster_find_secrets_monthly_increase_rival_bonus
					desc = COUNCILLOR_IS_YOUR_RIVAL
				}
			}
			if = { # Nemesis
				limit = {
					scope:councillor_liege = {
						has_relation_nemesis = scope:councillor
					}
				}
				add = {
					value = scope:councillor.spymaster_find_secrets_monthly_increase_nemesis_bonus
					desc = COUNCILLOR_IS_YOUR_NEMESIS
				}
			}
			if = {
				limit = {
					scope:councillor_liege = { has_perk = digging_for_dirt_perk }
				}
				add = {
					value = scope:councillor.spymaster_find_secrets_perk_monthly_increase
					desc = ESPIONAGE_PERK_BONUS_VALUE
				}
			}
		}
		if = {
			limit = {
				councillor_liege_has_erudition_legacy_5_perk = yes
			}
			add = {
				value = scope:councillor_liege.spymaster_find_secrets_erudition_monthly_increase
				desc = ERUDITION_DYNASTY_PERK_BONUS_VALUE
			}
		}
		if = {
			limit = {
				councillor_liege_has_family_business_bonus = yes
			}
			add = {
				value = scope:councillor_liege.spymaster_find_secrets_family_business_monthly_increase
				desc = FAMILY_BUSINESS_BONUS_VALUE
			}
		}
		if = {
			limit = {
				councillor_liege_has_consulted_house_bonus = yes
			}
			add = {
				value = scope:councillor_liege.spymaster_find_secrets_consulted_house_monthly_increase
				desc = CONSULTED_HOUSE_BONUS_VALUE
			}
		}
		#Events
		if = {
			limit = {
				scope:councillor_liege = { has_character_flag = court_of_no_secrets }
			}
			add = {
				value = spymaster_court_of_no_secrets_event_increase
				desc = COURT_OF_NO_SECRETS_VALUE
			}
		}
		if = {
			limit = {
				scope:councillor_liege = { has_character_modifier = court_without_secrets_modifier }
			}
			add = {
				value = spymaster_court_of_no_secrets_event_increase
				desc = court_without_secrets_modifier
			}
		}
		if = {
			limit = {
				exists = scope:target_character.cp:councillor_spymaster
				NOT = { scope:target_character.cp:councillor_spymaster = scope:councillor_liege }
				scope:target_character.cp:councillor_spymaster = {
					is_performing_council_task = task_disrupt_schemes
				}	
			}
			multiply = {
				value = scope:target_character.cp:councillor_spymaster.spymaster_find_secrets_disrupt_schemes_modifier_factor
				desc = TARGET_SPYMASTER_disrupt_schemes
			}
		}
		if = {
			limit = {
				exists = scope:target_character
				target_is_liege_or_above = scope:target_character
			}
			multiply = {
				value = 0.5
				desc = TARGET_IS_LIEGE_penalty
			}
		}
		if = {
			limit = {
				exists = scope:target_character
				target_is_vassal_or_below = scope:target_character
				has_character_modifier = servant_informants_modifier
			}
			multiply = {
				value = 2
				desc = SPYMASTER_FIND_SECRETS_CHARACTER_MODIFIERS
			}
		}
		if = {
			limit = {
				scope:councillor_liege = {
					has_title = title:c_byzantion
					title:c_byzantion = { has_county_modifier = pandidakterion_university_modifier }
				}
			}
			multiply = {
				value = 1.3
				desc = pandidakterion_university_modifier
			}
		}
		# Lady in Waiting
		if = {
			limit = {
				scope:councillor_liege = { has_character_modifier = employer_booner_lady_in_waiting_2_modifier }
				OR = {
					target_is_vassal_or_below = scope:target_character
					this = scope:target_character
				}
			}
			add = {
				value = 10
				desc = employer_booner_lady_in_waiting_2_modifier
			}
		}
		else_if = {
			limit = {
				scope:councillor_liege = { has_character_modifier = employer_booner_lady_in_waiting_3_modifier }
				OR = {
					target_is_vassal_or_below = scope:target_character
					this = scope:target_character
				}
			}
			add = {
				value = 10
				desc = employer_booner_lady_in_waiting_3_modifier
			}
		}
	}

	valid_target_court = {
		scope:target_character = {
			in_diplomatic_range = scope:councillor_liege
		}
		scope:target_character = {
			highest_held_title_tier >= tier_county
		}
		trigger_if = {
			limit = {
				scope:councillor_liege = {
					is_ai = yes
				}
			}
			scope:councillor_liege = {
				NOR = {
					has_relation_friend = scope:target_character
					has_relation_lover = scope:target_character
					is_allied_to = scope:target_character
					has_hook = scope:target_character
				}
			}
			OR = {
				AND = {
					scope:councillor.intrigue >= 12 # Spymaster intrigue
					scope:target_character = {
						is_vassal_of = scope:councillor_liege
					}
				}
				scope:councillor_liege = {
					has_relation_rival = scope:target_character
				}
			}
		}
	}

	potential_target_court = {
		scope:target_character = {
			is_alive = yes
			is_playable_character = yes
			highest_held_title_tier >= tier_county
			custom_description = {
				text = spymaster_will_not_find_secrets_at_own_court
				NOT = {
					this = scope:councillor
				}
			}
		}
	}

	on_start_task_court = {
		#spawn a task contract to help finding secrets
		if = {
			limit = {
				any_task_contract = {
					has_task_contract_type = laamp_help_find_secrets_contract
					NOT = {	task_contract_target = scope:councillor_liege }
				}
				any_player = {
					is_landless_adventurer = yes
					is_within_diplo_range = { CHARACTER = scope:councillor }
					any_character_task_contract = {
						has_task_contract_type = laamp_help_find_secrets_contract
						count <= council_task_contracts_limit_value
					}
					can_create_task_contract = {
						type_name = laamp_help_find_secrets_contract
						employer = scope:councillor
					}
					save_temporary_scope_as = player_laamp
				}
			}
			scope:player_laamp = {
				create_task_contract = {
					task_contract_type = laamp_help_find_secrets_contract
					task_contract_tier = scope:councillor.task_contract_tier_value
					location = scope:councillor.location
					task_contract_employer = scope:councillor
					target = scope:councillor_liege
				}
			}
		}
	}

	on_finish_task_court = {
		scope:councillor_liege = {
			if = {
				limit = {
					scope:target_character = {
						OR = {
							spymaster_task_find_secrets_court_has_minor_secrets_trigger = yes
							spymaster_task_find_secrets_court_has_major_secrets_trigger = yes
						}
					}
				}
				random = {
					chance = scope:councillor.spymaster_find_secrets_secret_discovery_chance
					save_scope_value_as = {
						name = having_find_secrets_event
						value = yes
					}
					trigger_event = {
						on_action = task_find_secrets_outcome
					}
				}
			}
			if = {
				limit = {
					has_perk = truth_is_relative_perk
					NOT = { exists = scope:having_find_secrets_event }
				}
				random = {
					chance = scope:councillor.spymaster_find_secrets_secret_discovery_chance
					save_scope_value_as = {
						name = having_find_secrets_event
						value = yes
					}
					trigger_event = spymaster_task.0381 # Fabricate a Hook (if you have Truth is Relative)
				}
			}
			if = {
				limit = {
					NOT = { exists = scope:having_find_secrets_event }
				}
				trigger_event = spymaster_task.0399
			}
			random = {
				chance = 10
				add_character_flag = {
					flag = no_ai_find_secrets
					years = 3
				}
			}
		}
	}

	monthly_on_action = task_find_secrets_side_effects
	
	ai_will_do = {
		value = 2
		if = { # Greedy AI's like spying on their subjects
			limit = {
				scope:councillor_liege.ai_greed > 0
			}
			add = {
				value = scope:councillor_liege.ai_greed
				divide = 2
			}
		}
		if = { # AI's with Golden Obligations really like this
			limit = {
				scope:councillor_liege = {
					has_perk = golden_obligations_perk
				}
			}
			add = 25
		}
		if = { # AI's with certain focuses enjoy this
			limit = {
				scope:councillor_liege = {
					OR = {
						has_focus = intrigue_skulduggery_focus
						has_focus = intrigue_intimidation_focus
						has_focus = martial_authority_focus
					}
				}
			}
			add = 50
		}
		if = {
			limit = {
				any_character_struggle = {
					is_struggle_type = mandate_of_heaven_struggle
				}

				has_character_flag = agenda_towards_escalation
			}
			add = 25
		}
		if = { # Honorable AI's dislike spying on their subjects
			limit = {
				scope:councillor_liege.ai_honor > 0
			}
			add = {
				value = scope:councillor_liege.ai_honor
				multiply = -1
			}
		}
		if = { # Compassionate AI's dislike spying on their subjects
			limit = {
				scope:councillor_liege.ai_compassion > 0
			}
			add = {
				value = scope:councillor_liege.ai_compassion
				multiply = -0.5
			}
		}
		if = {
			# Honest or trusting AI's just don't do this at all
			limit = {
				scope:councillor_liege = {
					OR = {
						has_trait = honest
						has_trait = trusting
					}
				}
			}
			multiply = 0
		}
		if = {
			# Don't do this too often
			limit = {
				scope:councillor_liege = { has_character_flag = no_ai_find_secrets }
			}
			multiply = 0
		}
	}
}
